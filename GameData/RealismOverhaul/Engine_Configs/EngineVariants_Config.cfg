//  ==================================================
//  Take the engineTypeCost field and apply that to
//  cost, mass and minthrust/maxthrust.
//  ==================================================

@PART[*]:HAS[#engineTypeMult[*],~minActiveEngines[*]]:AFTER[RealismOverhaulEngines]
{
	@MODULE[ModuleEngineConfigs]
	{
		@origMass *= #$../engineTypeMult$

		@CONFIG,*
		{
			@cost *= #$../../engineTypeMult$
			@minThrust *= #$../../engineTypeMult$
			@maxThrust *= #$../../engineTypeMult$
		}
	}
}

//  ==================================================
//  Same as above, but have minThrust based on less
//  engines if variable is set.
//  ==================================================

@PART[*]:HAS[#engineTypeMult[*],#minActiveEngines[*]]:AFTER[RealismOverhaulEngines]
{
    @MODULE[ModuleEngineConfigs]
    {
        @origMass *= #$../engineTypeMult$

        @CONFIG,*
        {
            @cost *= #$../../engineTypeMult$
            @minThrust *= #$../../minActiveEngines$
            @maxThrust *= #$../../engineTypeMult$
        }
    }
}

//  ==================================================
//  For engines with effectively extra dead/structural
//  mass.
//  ==================================================

@PART[*]:HAS[#massOffset[*]]:AFTER[RealismOverhaulEngines]
{
	@MODULE[ModuleEngineConfigs]
	{
		@origMass += #$../massOffset$
	}
}

//  ==================================================
//  For engines with verniers where we default to
//  configuring one way (e.g. has them) but this one
//  lacks them, or vice versa.
//  ==================================================

@PART[*]:HAS[#thrustOffset[*]]:AFTER[RealismOverhaulEngines]
{
	@MODULE[ModuleEngineConfigs]
	{
		@CONFIG,*
		{
			@minThrust += #$../../thrustOffset$
			@minThrust += #$../../thrustOffset$
		}
	}
}

//  ==================================================
//  Deletes origmass if ignoreMass field is found, use
//  it to avoid the engine changing the mass of a part.
//  ==================================================

@PART[*]:HAS[#ignoreMass[*rue]]:AFTER[RealismOverhaulEngines]
{
	@MODULE[ModuleEngineConfigs]
	{
		!origMass = 0
	}
}

//  ==================================================
//  Subtract thrust from engines with built-in verniers.
//  ==================================================

@PART[*]:HAS[#useVerniers[*rue]]:AFTER[RealismOverhaulEngines]
{
	@MODULE[ModuleEngineConfigs]
    {
		@CONFIG,*
		{
			@maxThrust -= #$../../vernierThrust$
			@minThrust -= #$../../vernierThrust$
		}
    }
}

//  ==================================================
//  Config cleanup.
//  ==================================================

@PART[*]:HAS[#engineType[*]]:FOR[zzzTagCleanup]
{
    !engineType = NULL
    !engineTypeMult = NULL
    !minActiveEngines = NULL
    !useVerniers = NULL
    !massOffset = NULL
	!thrustOffset = NULL
    !ignoreMass = NULL
}
